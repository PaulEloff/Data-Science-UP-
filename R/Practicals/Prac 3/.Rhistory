?diamonds
??diamonds
ggplot(diamonds, aes(cut)) +
geom_bar()
library("tidyverse")
library("ggplot2")
diamonds
ggplot(diamonds, aes(cut)) +
geom_bar()
ggplot(diamonds, aes(cut)) +
geom_bar() +
ggtitle("Amount of diamonds per cut type")
summary_b <- diamonds %>% summarize(cut_count=count(cut))
summary_b <- diamonds %>% group_by(cut) %>% summarize(cut_count=count(cut))
summary_b <- diamonds %>% group_by(cut) %>% summarise(cut_count=count(cut))
summary_b <- diamonds %>% group_by(cut) %>% summarize(cut_count=n())
View(summary_b)
summary_b <- diamonds %>% group_by(cut) %>% summarize(cut_count=n())
summary_b
ggplot(diamonds,aes(carat)) +
geom_boxplot()
ggplot(diamonds,aes(carat,price)) +
geom_boxplot()
ggplot(diamonds,aes(carat,cut)) +
geom_boxplot()
ggplot(diamonds,aes(cut,carat)) +
geom_boxplot()
ggplot(diamonds,aes(clarity,carat)) +
geom_boxplot()
?geom_histogram
ggplot(diamonds,aes(carat)) +
geom_histogram(binwidth=0.5)
summary_c <- diamonds %>% cut_width(carat,0.5) %>% summarize(carat_freq=n())
summary_c
summary_c <- diamonds %>% cut(carat,0.5) %>% summarize(carat_freq=n())
summary_c
summary_c <- diamonds %>% cut_interval(carat,0.5) %>% summarize(carat_freq=n())
summary_c
summary_c <- diamonds %>% mutate(category=carat(breaks(0,0.5,1,1.5,2,2.5,3))) %>% summarize(carat_freq=n())
summary_c
?mutate
summary_c <- diamonds %>% mutate(carat(breaks(0,0.5,1,1.5,2,2.5,3))) %>% summarize(carat_freq=n())
summary_c
summary_c <- diamonds %>% mutate(category=carat(breaks(0,0.5,1,1.5,2,2.5,3))) %>% summarize(carat_freq=n())
summary_c
summary_c <- diamonds %>% mutate(carat=cut(carat,breaks(0,0.5,1,1.5,2,2.5,3))) %>% summarize(carat_freq=n())
summary_c
summary_c <- diamonds %>% mutate(carat=cut(carat,breaks(-Inf,0,0.5,1,1.5,2,2.5,3,Inf))) %>% summarize(carat_freq=n())
summary_c
library("tidyverse")
library("ggplot2")
library("dplyr")
diamonds
summary_c <- diamonds %>% mutate(carat=cut(carat,breaks(0,0.5,1,1.5,2,2.5,3))) %>% summarize(carat_freq=n())
summary_c
summary_c <- diamonds %>% cut(carat,breaks(0,0.5,1,1.5,2,2.5,3)) %>% summarize(carat_freq=n())
summary_c
ran = seq(0,5,by=0.5)
rang = paste(head(ran,-1), br[-1], sep=" - ")
freq = hist(carat, breaks=ran, include.lowest=TRUE, plot=FALSE)
data.frame(range = ranges, frequency = freq$counts)
ran = seq(0,5,by=0.5)
rang = paste(head(ran,-1), ran[-1], sep=" - ")
freq = hist(carat, breaks=ran, include.lowest=TRUE, plot=FALSE)
data.frame(range = rang, frequency = freq$counts)
?arrange
summary_c <- diamonds %>% summary(carat)
sumamry_c
summary_c <- diamonds %>% aggregate(carat,FUN=mean)
sumamry_c
?categorize
??categorize
summary_c <- cut(diamonds$carat,breaks=(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5))
sumamry_c
summary_c <- cut(diamonds$carat,breaks=(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5))
summary_c
summary_c <- cut(diamonds$carat,breaks=[0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5])
summary_c
summary_c <- cut(diamonds$carat,breaks={0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5})
summary_c
summary_c <- cut(diamonds$carat,breaks=(0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5))
summary_c
summary_c <- cut(diamonds$carat,breaks=10)
summary_c
?c
binwidth = c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
summary_c <- cut(diamonds$carat,breaks=binwidth)
summary_c
binwidth = c(0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5)
summary_c <- cut(diamonds$carat,breaks=binwidth)
summary_c = factor(summary_c)
table(summary_c)
smaller <- filter(diamonds,carat<3)
smaller
ggplot(smaller,aes(carat,colour=cut)) +
geom_freqpoly(binwidth=0.5)
ggplot(smaller,aes(carat,colour=cut)) +
geom_boxplot() +
ggtitle("Carat statistics for each cut represented by boxplots:")
ggplot(smaller,aes(carat)) +
geom_boxplot() +
ggtitle("Carat statistics for each cut represented by boxplots:")
ggplot(smaller,aes(cut,carat,colour=cut)) +
geom_boxplot() +
ggtitle("Carat statistics for each cut represented by boxplots:")
ggplot(smaller,aes(cut,price,colour=cut)) +
geom_boxplot() +
ggtitle("Price statistics for each cut represented by boxplots")
ggplot(diamonds,aes(cut,color)) +
geom_tile()
ggplot(data = diamonds) +
geom_count(mapping = aes(x = cut, y = color))
ggplot(diamonds,aes(cut,color)) +
geom_tile(fill=z)
ggplot(diamonds,aes(cut,color,fill=z)) +
geom_tile()
ggplot(diamonds,aes(cut,color,fill=density)) +
geom_tile() +
scale_fill_distiller(palette = "Spectral")
ggplot(diamonds,aes(cut,color,fill=z)) +
geom_tile() +
scale_fill_distiller(palette = "Spectral")
ggplot(diamonds,aes(cut,color)) +
geom_tile() +
scale_fill_distiller(palette = "Spectral")
ggplot(diamonds,aes(cut,color,fill=z)) +
geom_tile() +
scale_fill_distiller() +
scale_fill_distiller(palette = "Spectral")
ggplot(diamonds,aes(carat,price,colour=clarity)) +
geom_boxplot() +
ggtitle("Price statistics for each cut represented by boxplots")
ggplot(diamonds,aes(carat,price,colour=clarity)) +
geom_boxplot() +
scale_color_brewer(palette="Spectral",direction=-1) +
ggtitle("Price statistics for each cut represented by boxplots")
ggplot(diamonds,aes(carat,price,colour=clarity)) +
geom_boxplot() +
scale_color_brewer(palette="BuPu",direction=-1) +
ggtitle("Price statistics for each cut represented by boxplots")
ggplot(diamonds,aes(carat,price,colour=clarity)) +
geom_boxplot() +
scale_color_brewer(palette="Spectral",trans="reverse") +
ggtitle("Price statistics for each cut represented by boxplots")
ggplot(diamonds,aes(carat,price,colour=clarity)) +
geom_boxplot() +
scale_color_brewer(palette="Spectral",direction=-1) +
ggtitle("Price statistics for each cut represented by boxplots")
ggplot(diamonds,aes(carat,price,colour=clarity)) +
geom_boxplot() +
scale_color_brewer(palette="Spectral",direction=-1) +
ggtitle("Price plotted against carat") +
scale_fill_discrete(name="Diamond clarity")
ggplot(diamonds,aes(carat,price,colour=clarity)) +
geom_boxplot() +
scale_color_brewer(palette="Spectral",direction=-1) +
ggtitle("Price plotted against carat") +
guides(fill=guide_legend(title="Diamond clarity"))
ggplot(diamonds,aes(carat,price,colour=clarity)) +
geom_boxplot() +
scale_color_brewer(palette("default"),direction=-1) +
ggtitle("Price plotted against carat") +
guides(fill=guide_legend(title="Diamond clarity"))
ggplot(diamonds,aes(carat,price,colour=clarity)) +
geom_boxplot() +
scale_color_brewer(palette("default"),direction=-1) +
ggtitle("Price plotted against carat (by clarity, shown in colour)") +
scale_color_discrete(name="Diamond clarity")
ggplot(diamonds,aes(carat,price,colour=clarity)) +
geom_boxplot() +
scale_color_brewer(name="Diamond clarity",palette("default"),direction=-1) +
ggtitle("Price plotted against carat (by clarity, shown in colour)")
ggplot(diamonds,aes(carat,price,colour=clarity)) +
geom_boxplot() +
scale_color_discrete(name="Diamond clarity",palette("default"),direction=-1) +
ggtitle("Price plotted against carat (by clarity, shown in colour)")
ggplot(diamonds,aes(carat,price,colour=clarity)) +
geom_boxplot() +
scale_color_discrete(palette("default"),direction=-1) +
ggtitle("Price plotted against carat (by clarity, shown in colour)")
ggplot(diamonds,aes(carat,price,colour=clarity)) +
geom_boxplot() +
scale_color_discrete(palette("Spectral"),direction=-1) +
ggtitle("Price plotted against carat (by clarity, shown in colour)")
ggplot(diamonds) +
scale_color_discrete(palette("default"),direction=-1) +
geom_boxplot(aes(carat,price,colour=clarity)) +
ggtitle("Price plotted against carat (by clarity, shown in colour)")
ggplot(diamonds) +
scale_color_discrete(palette("default"),direction=-1) +
geom_boxplot(aes(carat,price,colour=clarity)) +
labs(colour="Diamond clarity") +
ggtitle("Price plotted against carat (by clarity, shown in colour)")
ggplot(diamonds) +
scale_color_discrete(palette("PuBu"),direction=-1) +
geom_boxplot(aes(carat,price,colour=clarity)) +
labs(colour="Diamond clarity") +
ggtitle("Price plotted against carat (by clarity, shown in colour)")
ggplot(diamonds) +
scale_color_discrete(palette("Blues"),direction=-1) +
geom_boxplot(aes(carat,price,colour=clarity)) +
labs(colour="Diamond clarity") +
ggtitle("Price plotted against carat (by clarity, shown in colour)")
ggplot(diamonds) +
scale_color_brewer(palette("Blues"),direction=-1) +
geom_boxplot(aes(carat,price,colour=clarity)) +
labs(colour="Diamond clarity") +
ggtitle("Price plotted against carat (by clarity, shown in colour)")
ggplot(diamonds) +
scale_color_brewer(palette("BuPu"),direction=-1) +
geom_boxplot(aes(carat,price,colour=clarity)) +
labs(colour="Diamond clarity") +
ggtitle("Price plotted against carat (by clarity, shown in colour)")
ggplot(diamonds) +
scale_color_brewer(palette="BuPu",direction=-1) +
geom_boxplot(aes(carat,price,colour=clarity)) +
labs(colour="Diamond clarity") +
ggtitle("Price plotted against carat (by clarity, shown in colour)")
ggplot(diamonds) +
scale_color_brewer(palette="Blues",direction=-1) +
geom_boxplot(aes(carat,price,colour=clarity)) +
labs(colour="Diamond clarity") +
ggtitle("Price plotted against carat (by clarity, shown in colour)")
ggplot(diamonds) +
scale_color_brewer(palette="Blues",direction=-1) +
geom_boxplot(aes(carat,price,colour=clarity)) +
labs(colour="Diamond clarity") +
ggtitle("Price plotted against carat (by clarity, shown in colour)") +
theme_dark()
?diamonds
?ggplot
ggplot(diamonds,aes(cut,color,fill=color)) +
geom_tile() +
scale_fill_distiller(palette = "Spectral")
ggplot(diamonds,aes(cut,color,fill=z)) +
geom_tile() +
scale_fill_distiller(palette = "Spectral")
ggplot(data = diamonds) +
geom_count(mapping = aes(x = cut, y = color))
ggplot(diamonds,aes(cut,color,fill=z)) +
geom_tile() +
scale_fill_distiller(palette = "Spectral")
?diamonds
ggplot(diamonds,aes(cut,color)) +
geom_tile() +
scale_fill_distiller(palette = "Spectral")
?diamonds
ggplot(data = diamonds) +
geom_count(mapping = aes(x = cut, y = color))
ggplot(diamonds,aes(cut,color,fill=n())) +
geom_tile() +
scale_fill_distiller(palette = "Spectral")
spectral_ds <- diamonds %>% count(color,cut)
ggplot(spectral_ds,aes(cut,color,fill=n))+
geom_tile()
spectral_ds <- diamonds %>% count(cut,color)
ggplot(spectral_ds,aes(cut,color,fill=n)) +
geom_tile()
spectral_ds <- diamonds %>% count(cut,color)
ggplot(spectral_ds,aes(cut,color,fill=n)) +
scale_color_brewer(palette="Spectral")
geom_tile()
spectral_ds <- diamonds %>% count(cut,color)
ggplot(spectral_ds,aes(cut,color,fill=n)) +
scale_fill_brewer(palette="Spectral")
geom_tile()
spectral_ds <- diamonds %>% count(cut,color)
ggplot(spectral_ds,aes(cut,color,fill=n)) +
scale_colour_brewer(palette="Spectral") +
geom_tile()
spectral_ds <- diamonds %>% count(cut,color)
ggplot(spectral_ds,aes(cut,color,fill=n)) +
scale_fill_brewer(palette="Spectral") +
geom_tile()
library("tidyverse")
library("ggplot2")
library("dplyr")
diamonds
spectral_ds <- diamonds %>% count(cut,color)
ggplot(spectral_ds,aes(cut,color,fill=n)) +
scale_colour_brewer(palette="Spectral") +
geom_tile()
spectral_ds <- diamonds %>% count(cut,color)
ggplot(spectral_ds,aes(cut,color,fill=n)) +
scale_fill_brewer(palette="Spectral") +
geom_tile()
spectral_ds <- diamonds %>% count(cut,color)
ggplot(spectral_ds,aes(cut,color,fill=n)) +
scale_colour_brewer(palette="Blues") +
geom_tile()
spectral_ds <- diamonds %>% count(cut,color)
ggplot(spectral_ds,aes(cut,color,fill=n)) +
scale_colour_brewer(palette="Spectral") +
geom_tile()
spectral_ds <- diamonds %>% count(cut,color)
ggplot(spectral_ds,aes(cut,color,fill=n)) +
geom_tile() +
scale_colour_brewer(palette="Spectral")
spectral_ds <- diamonds %>% count(cut,color)
ggplot(spectral_ds,aes(cut,color,fill=n)) +
scale_colour_brewer(palette="default") +
geom_tile()
spectral_ds <- diamonds %>% count(cut,color)
ggplot(spectral_ds,aes(cut,color,fill=n)) +
scale_colour_brewer(palette="Blues") +
geom_tile()
spectral_ds <- diamonds %>% count(cut,color)
ggplot(spectral_ds,aes(cut,color,fill=n)) +
scale_colour_brewer(palette="PuBu") +
geom_tile()
spectral_ds <- diamonds %>% count(cut,color)
ggplot(spectral_ds,aes(cut,color,fill=n)) +
scale_colour_brewer(palette="Spectral") +
geom_tile()
spectral_ds <- diamonds %>% count(cut,color)
ggplot(spectral_ds,aes(cut,color)) +
scale_colour_brewer(palette="Spectral",fill=n) +
geom_tile()
?ggplot
spectral_ds <- diamonds %>% count(cut,color)
ggplot(spectral_ds,aes(cut,color,fill=n)) +
geom_tile()
spectral_ds <- diamonds %>% count(cut,color)
ggplot(spectral_ds,aes(cut,color,fill=n)) +
scale_colour_brewer(palette="Spectral") +
geom_tile()
spectral_ds <- diamonds %>% count(cut,color)
ggplot(spectral_ds) +
scale_colour_brewer(palette="Spectral") +
geom_tile(aes(cut,color,fill=n))
