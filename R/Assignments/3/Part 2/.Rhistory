knitr::opts_chunk$set(echo = TRUE)
library(statsr)
library(dplyr)
library(ggplot2)
all_polls <- get(load("all_polls.RData"))
dim(all_polls)
length(unique(all_polls$poll))
all_polls_1 <- all_polls %>% group_by(vote) %>%
summarise(n=n()) %>%
mutate(overall_prop=n/sum(n))
all_polls_1 %>% ggplot(aes(x=factor(vote),y=overall_prop)) +
geom_bar(stat="identity") +
ggtitle("Predicted proportions of non-voters (Vote 0) vs. voters (Vote 1)") +
scale_x_discrete(breaks=0:1,labels=c("Vote 0","Vote 1")) +
ylab("Proportion") +
theme(axis.title.x = element_blank())
# Compute p-hat for each poll: ex1_props
ex1_props <- all_polls %>% group_by(poll) %>%
summarise(poll_props=mean(vote))
# Compute p-hat from random sampling:
set.seed(1248421)
ex1_repeated = replicate(1000,mean(sample(all_polls$vote,size=30,replace=FALSE)))
mean_p_hat <- mean(ex1_repeated)
variability_p_hat <- sd(ex1_repeated)
# Select one poll from which to resample: one_poll
one_poll <- all_polls %>% filter(poll==1) %>%
select(vote)
# Generate 1000 resamples of one_poll: one_poll_boot_30
one_poll_boot_30 <- one_poll %>% rep_sample_n(size=30,replace=TRUE,reps=1000)
# Compute p-hat* for each resampled poll: ex2_props
ex2_props <- one_poll_boot_30 %>% summarise(poll_prop1=mean(vote))
# Compare variability of p-hat and p-hat*
variability_p_hat_star <- ex2_props %>% summarise(sd(poll_prop1))
# Create smoothed density curves for both experiments
ggplot() +
geom_density(data=ex1_props,aes(x=poll_props),color="blue") +
geom_density(data=ex2_props,aes(x=poll_prop1),color="cyan")
# Create smoothed density curves for both experiments
ggplot() +
geom_density(data=ex1_props,aes(x=poll_props),color="orange") +
geom_density(data=ex2_props,aes(x=poll_prop1),color="blue")
# Create smoothed density curves for both experiments
ggplot() +
geom_density(data=ex1_props,aes(x=poll_props),color="orange") +
geom_density(data=ex2_props,aes(x=poll_prop1),color="brown")
knitr::opts_chunk$set(echo = TRUE)
library(statsr)
library(dplyr)
library(ggplot2)
all_polls <- get(load("all_polls.RData"))
dim(all_polls)
length(unique(all_polls$poll))
all_polls_1 <- all_polls %>% group_by(vote) %>%
summarise(n=n()) %>%
mutate(overall_prop=n/sum(n))
all_polls_1 %>% ggplot(aes(x=factor(vote),y=overall_prop)) +
geom_bar(stat="identity") +
ggtitle("Predicted proportions of non-voters (Vote 0) vs. voters (Vote 1)") +
scale_x_discrete(breaks=0:1,labels=c("Vote 0","Vote 1")) +
ylab("Proportion") +
theme(axis.title.x = element_blank())
# Compute p-hat for each poll: ex1_props
ex1_props <- all_polls %>% group_by(poll) %>%
summarise(poll_props=mean(vote))
# Compute p-hat from random sampling:
set.seed(1248421)
ex1_repeated = replicate(1000,mean(sample(all_polls$vote,size=30,replace=FALSE)))
mean_p_hat <- mean(ex1_repeated)
variability_p_hat <- sd(ex1_repeated)
# Select one poll from which to resample: one_poll
one_poll <- all_polls %>% filter(poll==1) %>%
select(vote)
# Generate 1000 resamples of one_poll: one_poll_boot_30
one_poll_boot_30 <- one_poll %>% rep_sample_n(size=30,replace=TRUE,reps=1000)
# Compute p-hat* for each resampled poll: ex2_props
ex2_props <- one_poll_boot_30 %>% summarise(poll_prop1=mean(vote))
# Compare variability of p-hat and p-hat*
variability_p_hat_star <- ex2_props %>% summarise(sd(poll_prop1))
# Create smoothed density curves for both experiments
ggplot() +
geom_density(data=ex1_props,aes(x=poll_props),color="orange") +
geom_density(data=ex2_props,aes(x=poll_prop1),color="brown")
# Compute p-hat from one_poll: p_hat
p_hat <- mean(one_poll$vote)
one_poll_boot <- one_poll %>% rep_sample_n(30,replace=TRUE,reps=1000) %>%
summarise(poll_prop_boot=mean(vote))
# Create an interval of plausible values
one_poll_boot %>% summarise(lower=p_hat-2*sd(poll_prop_boot),upper=p_hat+2*sd(poll_prop_boot))
