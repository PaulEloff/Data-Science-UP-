library(tidyr)
library(dplyr)
library(ggplot2)
bus = read.csv("businesses.csv",
encoding='ISO-8859-1', stringsAsFactors = FALSE)
ins = read.csv("inspections.csv",
stringsAsFactors = FALSE)
vio = read.csv("violations.csv",
stringsAsFactors = FALSE)
head(bus)
head(ins)
head(vio)
names(bus)
nrow(bus)
length(unique(bus$business_id))
class(bus$postal_code)
length(unique(bus$postal_code))
count(bus, postal_code)
bus = mutate(bus, zip = substr(postal_code, 1, 5))
count(bus, zip)
head(filter(bus, zip == ""), 20)
bus$zip[bus$zip == "94602"] = "94102"
count(bus, zip)
bus %>% summarise(sum(is.na(longitude)))
bus %>% summarise(sum(is.na(latitude)))
validZip = c("94102", "94103", "94104", "94105", "94107",
"94108", "94109", "94110", "94111", "94112", "94114","94115",
"94116", "94117", "94118", "94121", "94122", "94123", "94124",
"94127", "94131", "94132", "94133", "94134")
busR = filter(bus, zip %in% validZip)
count(busR,is.na(longitude))
count(busR,is.na(latitude))
head(ins, 12)
ins[7716:7727,]
tail(ins, 12)
count(ins,business_id=="19")
num_ins <- ins %>% group_by(business_id) %>% summarise(n=n())
head(num_ins)
ggplot(data = num_ins, aes(x = n)) +
geom_histogram(bins=30)
range(ins$type)
ins = mutate(ins, newDate = as.Date(as.character(date), "%Y%m%d"))
ins = mutate(ins, year = format(newDate, "%Y"))
range(ins$year)
ins2016 = filter(ins,year=="2016")
ggplot(data = ins2016,aes(x = score)) +
geom_histogram(binwidth = 1)
ins_pbus_2016 <- ins2016 %>% group_by(business_id) %>% summarise(n=n())
two_or_more_2016 <- ins_pbus_2016 %>% filter(n>1) %>% summarise(n=n())
three_or_more_2016 <- ins_pbus_2016 %>% filter(n>2) %>% summarise(n=n())
n = count(ins2016, business_id)
insGroups = group_by(ins2016, business_id)
first_ins = slice(insGroups, which.min(date))
last_ins = slice(insGroups, which.max(date))
score_pairs = full_join(first_ins, last_ins, by = "business_id")
score_pairs = full_join(score_pairs, n, by = "business_id")
score_pairs = filter(score_pairs, n == 2)
ggplot(score_pairs, aes(x = score.x, y = score.y)) +
geom_point() +
geom_abline(slope = 1, intercept = 0)
score_pairs = mutate(score_pairs, score_diff = score.y - score.x)
ggplot(score_pairs, aes(x = score_diff)) +
geom_histogram() +
labs(x="second score - first score")
nrow(vio)
str(vio)
head(vio)
vio = mutate(vio, newDate = as.Date(as.character(date), "%Y%m%d"),
year = format(newDate, "%Y"))
vio2016 <- vio %>% filter(year=="2016")
num_vio <- vio2016 %>% group_by(business_id,date) %>% summarise(n=n())
ggplot(num_vio, aes(x = n)) +
geom_histogram() +
labs(x="Number of violations per inspection in 2016")
n = count(ins2016, business_id)
insGroups = group_by(ins2016, business_id)
first_ins = slice(insGroups, which.min(date))
num_ins = count(ins2016, business_id)
ins2016_one_score = left_join(first_ins, num_ins, by = "business_id")
ins2016_merge = inner_join(bus, ins2016_one_score, by = "business_id")
str(ins2016_merge)
length(unique(vio2016$description))
head(vio2016$description, 20)
vio2016 = mutate(vio2016, desc2 = sub("\\[.*\\]", "", description) )
# Next eliminate any trailing blanks created by this substitution
vio2016 = mutate(vio2016, desc2 = sub("\\ &", "", desc2))
vio2016 = mutate(vio2016, desc2 = tolower(desc2))
length(unique(vio2016$desc2))
vioTable = count(vio2016, desc2)
head(arrange(vioTable, desc(n)),25)
head(arrange(vioTable, n),25)
unclean = grepl("unsanitary", vio2016$desc2) |
grepl("unclean", vio2016$desc2) |
grepl("clean", vio2016$desc2)
human = grepl("hand", vio2016$desc2) |
grepl("hair", vio2016$desc2) |
grepl("nail", vio2016$desc2)
vio2016_dummy = data.frame(unclean, human, vio2016)
vio2016_all = bind_cols(vio2016, vio2016_dummy)
install.packages("gridExtra")
knitr::opts_chunk$set(echo = TRUE)
?left_join
??left_join
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyr)
library(dplyr)
library(ggplot2)
bus = read.csv("businesses.csv",
encoding='ISO-8859-1', stringsAsFactors = FALSE)
ins = read.csv("inspections.csv",
stringsAsFactors = FALSE)
vio = read.csv("violations.csv",
stringsAsFactors = FALSE)
head(bus)
head(ins)
head(vio)
names(bus)
nrow(bus)
length(unique(bus$business_id))
class(bus$postal_code)
length(unique(bus$postal_code))
count(bus, postal_code)
bus = mutate(bus, zip = substr(postal_code, 1, 5))
count(bus, zip)
head(filter(bus, zip == ""), 20)
bus$zip[bus$zip == "94602"] = "94102"
count(bus, zip)
bus %>% summarise(sum(is.na(longitude)))
bus %>% summarise(sum(is.na(latitude)))
validZip = c("94102", "94103", "94104", "94105", "94107",
"94108", "94109", "94110", "94111", "94112", "94114","94115",
"94116", "94117", "94118", "94121", "94122", "94123", "94124",
"94127", "94131", "94132", "94133", "94134")
busR = filter(bus, zip %in% validZip)
count(busR,is.na(longitude))
count(busR,is.na(latitude))
head(ins, 12)
ins[7716:7727,]
tail(ins, 12)
count(ins,business_id=="19")
num_ins <- ins %>% group_by(business_id) %>% summarise(n=n())
head(num_ins)
ggplot(data = num_ins, aes(x = n)) +
geom_histogram(bins=30)
range(ins$type)
ins = mutate(ins, newDate = as.Date(as.character(date), "%Y%m%d"))
ins = mutate(ins, year = format(newDate, "%Y"))
range(ins$year)
ins2016 = filter(ins,year=="2016")
ggplot(data = ins2016,aes(x = score)) +
geom_histogram(binwidth = 1)
count(count(ins2016,num_ins2016=business_id),num_ins2016=n)
n = count(ins2016, business_id)
insGroups = group_by(ins2016, business_id)
first_ins = slice(insGroups, which.min(date))
last_ins = slice(insGroups, which.max(date))
score_pairs = full_join(first_ins, last_ins, by = "business_id")
score_pairs = full_join(score_pairs, n, by = "business_id")
score_pairs = filter(score_pairs, n == 2)
ggplot(score_pairs, aes(x = score.x, y = score.y)) +
geom_point() +
geom_abline(slope = 1, intercept = 0)
score_pairs = mutate(score_pairs, score_diff = score.y - score.x)
ggplot(score_pairs, aes(x = score_diff)) +
geom_histogram() +
labs(x="second score - first score")
nrow(vio)
str(vio)
head(vio)
vio = mutate(vio, newDate = as.Date(as.character(date), "%Y%m%d"),
year = format(newDate, "%Y"))
vio2016 <- vio %>% filter(year=="2016")
num_vio <- vio2016 %>% group_by(business_id,date) %>% summarise(n=n())
ggplot(num_vio, aes(x = n)) +
geom_histogram() +
labs(x="Number of violations per inspection in 2016")
n = count(ins2016, business_id)
insGroups = group_by(ins2016, business_id)
first_ins = slice(insGroups, which.min(date))
num_ins = count(ins2016, business_id)
ins2016_one_score = left_join(first_ins, num_ins, by = "business_id")
ins2016_merge = inner_join(bus, ins2016_one_score, by = "business_id")
str(ins2016_merge)
length(unique(vio2016$description))
head(vio2016$description, 20)
vio2016 = mutate(vio2016, desc2 = sub("\\[.*\\]", "", description) )
# Next eliminate any trailing blanks created by this substitution
vio2016 = mutate(vio2016, desc2 = sub("\\ &", "", desc2))
vio2016 = mutate(vio2016, desc2 = tolower(desc2))
length(unique(vio2016$desc2))
vioTable = count(vio2016, desc2)
head(arrange(vioTable, desc(n)),25)
head(arrange(vioTable, n),25)
unclean = grepl("unsanitary", vio2016$desc2) |
grepl("unclean", vio2016$desc2) |
grepl("clean", vio2016$desc2)
human = grepl("hand", vio2016$desc2) |
grepl("hair", vio2016$desc2) |
grepl("nail", vio2016$desc2)
infest = grepl("rats", vio2016$desc2) |
grepl("mice", vio2016$desc2) |
grepl("vermin", vio2016$desc2)
law = grepl("permit", vio2016$desc2) |
grepl("high risk", vio2016$desc2) |
grepl("unapproved", vio2016$desc2)
safety = grepl("risk", vio2016$desc2) |
grepl("contamination", vio2016$desc2) |
grepl("safety", vio2016$desc2)
infrastructure1 = grepl("sewage", vio2016$desc2) |
grepl("plumbing", vio2016$desc2) |
grepl("floors", vio2016$desc2)
infrastructure2 = grepl("ventilation", vio2016$desc2) |
grepl("warewashing", vio2016$desc2) |
grepl("rooms", vio2016$desc2)
equipment = grepl("thermometer", vio2016$desc2) |
grepl("handwashing", vio2016$desc2) |
grepl("utensils", vio2016$desc2)
risks = grepl("risk", vio2016$desc2) |
grepl("hazards", vio2016$desc2) |
grepl("contamination", vio2016$desc2)
food_handling = grepl("surfaces", vio2016$desc2) |
grepl("storage", vio2016$desc2) |
grepl("method", vio2016$desc2)
vio2016_dummy = data.frame(unclean,human,infest,law,safety,infrastructure1,
infrastructure2,equipment,risks,food_handling)
vio2016_all = bind_cols(vio2016, vio2016_dummy)
aggVio = group_by(vio2016_all, business_id, newDate)
aggVio = summarize(aggVio, unclean=any(unclean),human=any(human),infest=any(infest),law=any(law),safety=any(safety),
infrastructure1=any(infrastructure1),infrastructure2=any(infrastructure2),equipment=any(equipment),
risks=any(risks),food_handling=any(food_handling),
num_vio=n())
View(aggVio)
View(ins2016_merge)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyr)
library(dplyr)
library(ggplot2)
bus = read.csv("businesses.csv",
encoding='ISO-8859-1', stringsAsFactors = FALSE)
ins = read.csv("inspections.csv",
stringsAsFactors = FALSE)
vio = read.csv("violations.csv",
stringsAsFactors = FALSE)
head(bus)
head(ins)
head(vio)
names(bus)
nrow(bus)
length(unique(bus$business_id))
class(bus$postal_code)
length(unique(bus$postal_code))
count(bus, postal_code)
bus = mutate(bus, zip = substr(postal_code, 1, 5))
count(bus, zip)
head(filter(bus, zip == ""), 20)
bus$zip[bus$zip == "94602"] = "94102"
count(bus, zip)
bus %>% summarise(sum(is.na(longitude)))
bus %>% summarise(sum(is.na(latitude)))
validZip = c("94102", "94103", "94104", "94105", "94107",
"94108", "94109", "94110", "94111", "94112", "94114","94115",
"94116", "94117", "94118", "94121", "94122", "94123", "94124",
"94127", "94131", "94132", "94133", "94134")
busR = filter(bus, zip %in% validZip)
count(busR,is.na(longitude))
count(busR,is.na(latitude))
head(ins, 12)
ins[7716:7727,]
tail(ins, 12)
count(ins,business_id=="19")
num_ins <- ins %>% group_by(business_id) %>% summarise(n=n())
head(num_ins)
ggplot(data = num_ins, aes(x = n)) +
geom_histogram(bins=30)
range(ins$type)
ins = mutate(ins, newDate = as.Date(as.character(date), "%Y%m%d"))
ins = mutate(ins, year = format(newDate, "%Y"))
range(ins$year)
ins2016 = filter(ins,year=="2016")
ggplot(data = ins2016,aes(x = score)) +
geom_histogram(binwidth = 1)
count(count(ins2016,num_ins2016=business_id),num_ins2016=n)
n = count(ins2016, business_id)
insGroups = group_by(ins2016, business_id)
first_ins = slice(insGroups, which.min(date))
last_ins = slice(insGroups, which.max(date))
score_pairs = full_join(first_ins, last_ins, by = "business_id")
score_pairs = full_join(score_pairs, n, by = "business_id")
score_pairs = filter(score_pairs, n == 2)
ggplot(score_pairs, aes(x = score.x, y = score.y)) +
geom_point() +
geom_abline(slope = 1, intercept = 0)
score_pairs = mutate(score_pairs, score_diff = score.y - score.x)
ggplot(score_pairs, aes(x = score_diff)) +
geom_histogram() +
labs(x="second score - first score")
nrow(vio)
str(vio)
head(vio)
vio = mutate(vio, newDate = as.Date(as.character(date), "%Y%m%d"),
year = format(newDate, "%Y"))
vio2016 <- vio %>% filter(year=="2016")
num_vio <- vio2016 %>% group_by(business_id,date) %>% summarise(n=n())
ggplot(num_vio, aes(x = n)) +
geom_histogram() +
labs(x="Number of violations per inspection in 2016")
n = count(ins2016, business_id)
insGroups = group_by(ins2016, business_id)
first_ins = slice(insGroups, which.min(date))
num_ins = count(ins2016, business_id)
ins2016_one_score = left_join(first_ins, num_ins, by = "business_id")
ins2016_merge = inner_join(bus, ins2016_one_score, by = "business_id")
str(ins2016_merge)
length(unique(vio2016$description))
head(vio2016$description, 20)
vio2016 = mutate(vio2016, desc2 = sub("\\[.*\\]", "", description) )
# Next eliminate any trailing blanks created by this substitution
vio2016 = mutate(vio2016, desc2 = sub("\\ &", "", desc2))
vio2016 = mutate(vio2016, desc2 = tolower(desc2))
length(unique(vio2016$desc2))
vioTable = count(vio2016, desc2)
head(arrange(vioTable, desc(n)),25)
head(arrange(vioTable, n),25)
unclean = grepl("unsanitary", vio2016$desc2) |
grepl("unclean", vio2016$desc2) |
grepl("clean", vio2016$desc2)
human = grepl("hand", vio2016$desc2) |
grepl("hair", vio2016$desc2) |
grepl("nail", vio2016$desc2)
infest = grepl("rats", vio2016$desc2) |
grepl("mice", vio2016$desc2) |
grepl("vermin", vio2016$desc2)
law = grepl("permit", vio2016$desc2) |
grepl("high risk", vio2016$desc2) |
grepl("unapproved", vio2016$desc2)
safety = grepl("risk", vio2016$desc2) |
grepl("contamination", vio2016$desc2) |
grepl("safety", vio2016$desc2)
infrastructure1 = grepl("sewage", vio2016$desc2) |
grepl("plumbing", vio2016$desc2) |
grepl("floors", vio2016$desc2)
infrastructure2 = grepl("ventilation", vio2016$desc2) |
grepl("warewashing", vio2016$desc2) |
grepl("rooms", vio2016$desc2)
equipment = grepl("thermometer", vio2016$desc2) |
grepl("handwashing", vio2016$desc2) |
grepl("utensils", vio2016$desc2)
risks = grepl("risk", vio2016$desc2) |
grepl("hazards", vio2016$desc2) |
grepl("contamination", vio2016$desc2)
food_handling = grepl("surfaces", vio2016$desc2) |
grepl("storage", vio2016$desc2) |
grepl("method", vio2016$desc2)
vio2016_dummy = data.frame(unclean,human,infest,law,safety,infrastructure1,
infrastructure2,equipment,risks,food_handling)
vio2016_all = bind_cols(vio2016, vio2016_dummy)
aggVio = group_by(vio2016_all, business_id, newDate)
aggVio = summarize(aggVio, unclean=any(unclean),human=any(human),infest=any(infest),law=any(law),safety=any(safety),
infrastructure1=any(infrastructure1),infrastructure2=any(infrastructure2),equipment=any(equipment),
risks=any(risks),food_handling=any(food_handling),
num_vio=n())
ins_vio_merge = left_join(ins2016_merge,aggVio,by="business_id")
View(ins_vio_merge)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyr)
library(dplyr)
library(ggplot2)
bus = read.csv("businesses.csv",
encoding='ISO-8859-1', stringsAsFactors = FALSE)
ins = read.csv("inspections.csv",
stringsAsFactors = FALSE)
vio = read.csv("violations.csv",
stringsAsFactors = FALSE)
head(bus)
head(ins)
head(vio)
names(bus)
nrow(bus)
length(unique(bus$business_id))
class(bus$postal_code)
length(unique(bus$postal_code))
count(bus, postal_code)
bus = mutate(bus, zip = substr(postal_code, 1, 5))
count(bus, zip)
head(filter(bus, zip == ""), 20)
bus$zip[bus$zip == "94602"] = "94102"
count(bus, zip)
bus %>% summarise(sum(is.na(longitude)))
bus %>% summarise(sum(is.na(latitude)))
validZip = c("94102", "94103", "94104", "94105", "94107",
"94108", "94109", "94110", "94111", "94112", "94114","94115",
"94116", "94117", "94118", "94121", "94122", "94123", "94124",
"94127", "94131", "94132", "94133", "94134")
busR = filter(bus, zip %in% validZip)
count(busR,is.na(longitude))
count(busR,is.na(latitude))
head(ins, 12)
ins[7716:7727,]
tail(ins, 12)
count(ins,business_id=="19")
num_ins <- ins %>% group_by(business_id) %>% summarise(n=n())
head(num_ins)
ggplot(data = num_ins, aes(x = n)) +
geom_histogram(bins=30)
range(ins$type)
ins = mutate(ins, newDate = as.Date(as.character(date), "%Y%m%d"))
ins = mutate(ins, year = format(newDate, "%Y"))
range(ins$year)
ins2016 = filter(ins,year=="2016")
ggplot(data = ins2016,aes(x = score)) +
geom_histogram(binwidth = 1)
count(count(ins2016,num_ins2016=business_id),num_ins2016=n)
n = count(ins2016, business_id)
insGroups = group_by(ins2016, business_id)
first_ins = slice(insGroups, which.min(date))
last_ins = slice(insGroups, which.max(date))
score_pairs = full_join(first_ins, last_ins, by = "business_id")
score_pairs = full_join(score_pairs, n, by = "business_id")
score_pairs = filter(score_pairs, n == 2)
ggplot(score_pairs, aes(x = score.x, y = score.y)) +
geom_point() +
geom_abline(slope = 1, intercept = 0)
score_pairs = mutate(score_pairs, score_diff = score.y - score.x)
ggplot(score_pairs, aes(x = score_diff)) +
geom_histogram() +
labs(x="second score - first score")
nrow(vio)
str(vio)
head(vio)
vio = mutate(vio, newDate = as.Date(as.character(date), "%Y%m%d"),
year = format(newDate, "%Y"))
vio2016 <- vio %>% filter(year=="2016")
num_vio <- vio2016 %>% group_by(business_id,date) %>% summarise(n=n())
ggplot(num_vio, aes(x = n)) +
geom_histogram() +
labs(x="Number of violations per inspection in 2016")
n = count(ins2016, business_id)
insGroups = group_by(ins2016, business_id)
first_ins = slice(insGroups, which.min(date))
num_ins = count(ins2016, business_id)
ins2016_one_score = left_join(first_ins, num_ins, by = "business_id")
ins2016_merge = inner_join(bus, ins2016_one_score, by = "business_id")
str(ins2016_merge)
length(unique(vio2016$description))
head(vio2016$description, 20)
vio2016 = mutate(vio2016, desc2 = sub("\\[.*\\]", "", description) )
# Next eliminate any trailing blanks created by this substitution
vio2016 = mutate(vio2016, desc2 = sub("\\ &", "", desc2))
vio2016 = mutate(vio2016, desc2 = tolower(desc2))
length(unique(vio2016$desc2))
vioTable = count(vio2016, desc2)
head(arrange(vioTable, desc(n)),25)
head(arrange(vioTable, n),25)
unclean = grepl("unsanitary", vio2016$desc2) |
grepl("unclean", vio2016$desc2) |
grepl("clean", vio2016$desc2)
human = grepl("hand", vio2016$desc2) |
grepl("hair", vio2016$desc2) |
grepl("nail", vio2016$desc2)
infest = grepl("rats", vio2016$desc2) |
grepl("mice", vio2016$desc2) |
grepl("vermin", vio2016$desc2)
law = grepl("permit", vio2016$desc2) |
grepl("high risk", vio2016$desc2) |
grepl("unapproved", vio2016$desc2)
safety = grepl("risk", vio2016$desc2) |
grepl("contamination", vio2016$desc2) |
grepl("safety", vio2016$desc2)
infrastructure1 = grepl("sewage", vio2016$desc2) |
grepl("plumbing", vio2016$desc2) |
grepl("floors", vio2016$desc2)
infrastructure2 = grepl("ventilation", vio2016$desc2) |
grepl("warewashing", vio2016$desc2) |
grepl("rooms", vio2016$desc2)
equipment = grepl("thermometer", vio2016$desc2) |
grepl("handwashing", vio2016$desc2) |
grepl("utensils", vio2016$desc2)
risks = grepl("risk", vio2016$desc2) |
grepl("hazards", vio2016$desc2) |
grepl("contamination", vio2016$desc2)
vio2016_dummy = data.frame(unclean,human,infest,law,safety,infrastructure1,
infrastructure2,equipment,risks)
vio2016_all = bind_cols(vio2016, vio2016_dummy)
aggVio = group_by(vio2016_all, business_id, newDate)
aggVio = summarize(aggVio, unclean=any(unclean),human=any(human),infest=any(infest),law=any(law),safety=any(safety),
infrastructure1=any(infrastructure1),infrastructure2=any(infrastructure2),equipment=any(equipment),
risks=any(risks),
num_vio=n())
ins_vio_merge = left_join(ins2016_merge,aggVio,by="business_id")
ins_vio_merge = mutate(ins_vio_merge,num_vio=replace(num_vio,is.na(num_vio),0))
ins_vio_merge = replace_na(ins_vio_merge, list(unclean=FALSE,human=FALSE,infest=FALSE,law=FALSE,safety=FALSE,infrastructure1=FALSE,
infrastructure2=FALSE,equipment=FALSE,risks=FALSE))
ggplot(ins_vio_merge, aes(x = score, y = num_vio)) +
geom_point()
cor(ins_vio_merge$num_vio,ins_vio_merge$score)
library(gridExtra)
p0 = ggplot(ins_vio_merge, aes(y = score))
p1 = p0 + geom_boxplot(aes(x = unclean))
p2 = p0 + geom_boxplot(aes(x = human))
p3 = p0 + geom_boxplot(aes(x = infest))
p4 = p0 + geom_boxplot(aes(x = law))
p5 = p0 + geom_boxplot(aes(x = safety))
p6 = p0 + geom_boxplot(aes(x = infrastructure1))
p7 = p0 + geom_boxplot(aes(x = infrastructure2))
p8 = p0 + geom_boxplot(aes(x = equipment))
p9 = p0 + geom_boxplot(aes(x = risks))
grid.arrange(p1, p2,p3, p4, p5, p6, p7, p8, p9,  ncol=3)
lm(score ~ unclean + human + infest + law + safety + infrastructure1 + infrastructure2 + equipment + risks,
data = ins_vio_merge)
