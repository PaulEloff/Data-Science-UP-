knitr::opts_chunk$set(echo = TRUE)
a <- 35
c <- 11
m <- 123
x_0 <- 13
x <- vector(length=18)
for (i in 1:18){
d <- (a*d+c)%%m
x[i] <- d/m
}
a <- 35
c <- 11
m <- 123
x_0 <- 13
x <- vector(length=18)
for (i in 1:18){
x_0 <- (a*x_0+c)%%m
x[i] <- x_0/m
}
x
knitr::opts_chunk$set(echo = TRUE)
summary(cars)#cars data sets in a dataset built into R
plot(pressure)
a <- 35
c <- 11
m <- 123
x_0 <- 13
x <- vector(length=18)
for (i in 1:18){
x_0 <- (a*x_0+c)%%m
x[i] <- x_0/m
}
x
pbinom(x,6,0.25)
ppois(x,2.8)
punif(x)
var <- 1.1^0.5
pnorm(x,5,var)
plnorm(x,5,var)
pexp(x,3.5)
pgamma(x,3,12)
punif(x)
ppareto(x,2.5,6)
install.packages("rmutils")
install.packages("VGAM")
install.packages("rmutil")
knitr::opts_chunk$set(echo = TRUE)
library(VGAM)
library(rmutil)
summary(cars)#cars data sets in a dataset built into R
plot(pressure)
a <- 35
c <- 11
m <- 123
x_0 <- 13
x <- vector(length=18)
for (i in 1:18){
x_0 <- (a*x_0+c)%%m
x[i] <- x_0/m
}
x
qbinom(x,6,0.25)
qpois(x,2.8)
qunif(x)
var <- 1.1^0.5
qnorm(x,5,var)
qlnorm(x,5,var)
qexp(x,3.5)
qgamma(x,3,12)
qunif(x)
qpareto(x,2.5,6)
knitr::opts_chunk$set(echo = TRUE)
library(poistweedie)
library(Matrix)
#This is how to display a graphic using Latex in R Markdown:
knitr::include_graphics('DecisionFunctions.JPG')
LM <- matrix(c(6,1,-1.5,-1,5.5,4,4.1,3.2,1),nrow=3,ncol=3)
LM
PM1 <- matrix(c(0,0,0,0,0,0,0,0,0),nrow=3,ncol=3)
PM2 <- matrix(c(0,0,0,0,0,0,0,0,0),nrow=3,ncol=3)
PM3 <- matrix(c(0,0,0,0,0,0),nrow=3,ncol=2)
PM4 <- matrix(c(0,0,0,0,0,0),nrow=3,ncol=2)
#d1:
PM1[1,1] <- ppois(0,2)
PM1[1,2] <- ppois(1,2)-PM1[1,1]
PM1[1,3] <- 1-PM1[1,1]-PM1[1,2]
PM1[2,1] <- ppois(0,3)
PM1[2,2] <- ppois(1,3)-PM1[2,1]
PM1[2,3] <- 1-PM1[2,1]-PM1[2,2]
PM1[3,1] <- ppois(0,4)
PM1[3,2] <- ppois(1,4)-PM1[3,1]
PM1[3,3] <- 1-PM1[3,1]-PM1[3,2]
#d2:
PM2[1,1] <- ppois(1,2)
PM2[1,2] <- ppois(2,2)-PM2[1,1]
PM2[1,3] <- 1-PM2[1,1]-PM2[1,2]
PM2[2,1] <- ppois(1,3)
PM2[2,2] <- ppois(2,3)-PM2[2,1]
PM2[2,3] <- 1-PM2[2,1]-PM2[2,2]
PM2[3,1] <- ppois(1,4)
PM2[3,2] <- ppois(2,4)-PM2[3,1]
PM2[3,3] <- 1-PM2[3,1]-PM2[3,2]
#d3:
PM3[1,1] <- ppois(2,2)
PM3[1,2] <- 1-PM3[1,1]
PM3[2,1] <- ppois(2,3)
PM3[2,2] <- 1-PM3[2,1]
PM3[3,1] <- ppois(2,4)
PM3[3,2] <- 1-PM3[3,1]
#d4:
PM4[1,1] <- ppois(3,2)
PM4[1,2] <- 1-PM4[1,1]
PM4[2,1] <- ppois(3,3)
PM4[2,2] <- 1-PM4[2,1]
PM4[3,1] <- ppois(3,4)
PM4[3,2] <- 1-PM4[3,1]
#Now, for the risk function matrix:
RM <- matrix(c(0,0,0,0,0,0,0,0,0,0,0,0),nrow=3,ncol=4)
RM[1,1] <- LM[1,1]*PM1[1,1]+LM[1,2]*PM1[1,2]+LM[1,3]*PM1[1,3]
RM[1,2] <- LM[1,1]*PM2[1,1]+LM[1,2]*PM2[1,2]+LM[1,3]*PM2[1,3]
RM[1,3] <- LM[1,1]*PM3[1,1]+LM[1,3]*PM3[1,2]
RM[1,4] <- LM[1,2]*PM4[1,1]+LM[1,3]*PM4[1,2]
RM[2,1] <- LM[2,1]*PM1[2,1]+LM[2,2]*PM1[2,2]+LM[2,3]*PM1[2,3]
RM[2,2] <- LM[2,1]*PM2[2,1]+LM[2,2]*PM2[2,2]+LM[2,3]*PM2[2,3]
RM[2,3] <- LM[2,1]*PM3[2,1]+LM[2,3]*PM3[2,2]
RM[2,4] <- LM[2,2]*PM4[2,1]+LM[2,3]*PM4[2,2]
RM[3,1] <- LM[3,1]*PM1[3,1]+LM[3,2]*PM1[3,2]+LM[3,3]*PM1[3,3]
RM[3,2] <- LM[3,1]*PM2[3,1]+LM[3,2]*PM2[3,2]+LM[3,3]*PM2[3,3]
RM[3,3] <- LM[3,1]*PM3[3,1]+LM[3,3]*PM3[3,2]
RM[3,4] <- LM[3,2]*PM4[3,1]+LM[3,3]*PM4[3,2]
RM
mmcriterion <- max(min(RM[,1]),min(RM[,2]),min(RM[,3]),min(RM[,4]))
mmcriterion
