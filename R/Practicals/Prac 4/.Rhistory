# Chunk 1
library("tidyverse")
library("data.table")
# Chunk 2
#Importing the binary.csv dataset into a newly created dataframe called binary:
# Chunk 3
binary <- read.csv('binary.csv')
str(binary)
# Chunk 4
#By printing the 'admit' tibble in a), we can answer questions b) and c) from simple observation. Further data manipulation is done in d) and e), as required.
# Chunk 5
#a
admit <- fread('binary.csv',select=c(1),nrows=20)
admit
# Chunk 6
#d
gpa <- fread('binary.csv',select="gpa")
str(gpa)
#e
gre <- fread('binary.csv',select=c(2))
str(gre)
# Chunk 7
tidyr::who
# Chunk 8
#After tidying the data in a) and manipulating it in b) we produce useful visual representations of the data in c).
# Chunk 9
#a
who1 <- who %>%
gather(key="key",value="cases",new_sp_m014:newrel_f65,na.rm=TRUE) %>%
mutate(key=stringr::str_replace(key,"newrel","new_rel")) %>%
separate(key, c("new","var","sexage")) %>%
select(-new,-iso2,-iso3) %>%
separate(sexage,c("sex","age"),sep=1)
#b
who2 <- who1 %>%
group_by(country,year,sex) %>%
filter(year>1995) %>%
summarise(cases=sum(cases)) %>%
unite(country_sex,country,sex,remove=FALSE) %>%
unite(country_year,country,year,remove=FALSE)
who2
#c
ggplot(who2,aes(x=year,y=cases,group=country_sex,colour=sex)) +
geom_point() +
ggtitle("Cases plotted against Year, grouped by Country and Sex (e.g. South Africa m, South Africa f, etc.)")
ggplot(who2,aes(x=sex,y=cases,group=sex)) +
geom_boxplot() +
ggtitle("Cases plotted against Sex")
ggplot(who2,aes(x=cases,stat=country,colour=country)) +
geom_freqpoly(bins=10) +
ggtitle("Cases plotted against Year, grouped by Country")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
?count
ta_count = count(set,taidgender)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
set = read_delim("Macnell-RatingsData.csv", delim = ",")
dim(set)
set
head(set)
set <- select(set,'prompt','tagender','taidgender')
count(set,tagender,taidgender)
set = mutate(set,
tagender = factor(tagender, levels= c(0,1),
labels = c("female", "male")),
taidgender = factor(taidgender, levels = c(0, 1),
labels = c("female","male")))
set
with(set, stripchart(prompt ~ taidgender + tagender,
vertical = TRUE, method = "jitter",
ylab = "Evaluation of Promptness"))
ggplot(subset(set,!is.na(prompt)),aes(x=taidgender,y=prompt)) +
geom_boxplot() +
ylab("Promptness boxplot") +
xlab("Perceived gender of TA")
summarize(group_by(set, taidgender), mean(prompt, na.rm = TRUE))
ta_count = count(set,taidgender)
sec_count = count(set,taidgender)
ta_count
sec_count
View(sec_count)
View(ta_count)
View(sec_count)
ta_count = count(set,tagender)
sec_count = count(set,taidgender)
ta_count
sec_count
ta_count = count(set,tagender)
sec_count = count(set,c("tagender","taidgender"))
ta_count = count(set,tagender)
sec_count = c(11,12,11,13)
ta_count
sec_count
View(ta_count)
prompt_male = filter(  set_male )$prompt
?filter
ta_count = count(set,tagender)
sec_count = count(set,c(tagender=="male"&taidgender=="male",
tagender=="male"&taidgender=="female",
tagender=="female"&taidgender=="female",
tagender=="male"&taidgender=="male"))
ta_count = count(set,tagender)
sec_count = count(set,c(tagender=="male"&taidgender=="male",
tagender=="male"&taidgender=="female",
tagender=="female"&taidgender=="female",
tagender=="female"&taidgender=="female"))
ta_count = count(set,tagender)
sec_count = count(set,c(tagender=="male" & taidgender=="male",
tagender=="male" & taidgender=="female",
tagender=="female" & taidgender=="female",
tagender=="female" & taidgender=="female"))
ta_count = count(set,tagender)
sec_count = c(11,12,11,13)
ta_count
sec_count
prompt_male = filter(set,tagender=="male")$prompt
prompt_female = filter(set,tagender=="female")$prompt
permute_prompt_f  = sample(prompt_female)
permute_prompt_m  = sample(prompt_male)
permute_prompt_f
permute_prompt_m
rand_id_f = c(permute_prompt_f[1:sec_count$n[1]],
permute_prompt_m[1:sec_count$n[3]])
?sec_count
??sec_count
rand_id_f = c(permute_prompt_f[1:sec_count[1]],
permute_prompt_m[1:sec_count[3]])
rand_id_f
rand_id_m = c(permute_prompt_f[-(1:sec_count[1])],
permute_prompt_m[-(1:sec_count[3])])
rand_id_m
mean(rand_id_f) - mean(rand_id_f)
ta_count = count(set,tagender)
sec_count = count(set,c("tagender","taidgender"))
ta_count = count(set,tagender)
sec_count = c(11,12,11,13)
ta_count
sec_count
set.seed(12468124)
sampleStats = replicate(3000, {
permute_prompt_f  = sample(prompt_female)
permute_prompt_m  = sample(prompt_male)
rand_id_f = c(permute_prompt_f[1:sec_count[1]],
permute_prompt_m[1:sec_count[3]])
rand_id_m = c(permute_prompt_f[-(1:sec_count[1])],
permute_prompt_m[-(1:sec_count[3])])
mean(rand_id_f) - mean(rand_id_f)
})
ggplot(data = data.frame(sampleStats), aes(sampleStats)) +
geom_histogram(bins = 40) +
geom_vline(xintercept = -0.8) +
labs(x = "Test Statistic")
ta_count = count(set,tagender)
sec_count = count(set,tagender&taidgender)
ta_count
sec_count
View(sec_count)
ta_count = count(set,tagender)
sec_count = count(set,tagender taidgender)
ta_count = count(set,tagender)
sec_count = count(set,c(tagender,taidgender))
ta_count = count(set,tagender)
sec_count = count(set,c('tagender','taidgender'))
ta_count = count(set,tagender)
sec_count = count(set,c("tagender","taidgender"))
